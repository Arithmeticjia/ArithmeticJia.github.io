<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Django2.1集成Celery4.3.0示例</title>
    <url>/2019/11/26/Django2-1%E9%9B%86%E6%88%90Celery4-3-0%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<p>Celery 是一个简单、灵活且可靠的，处理大量消息的分布式系统，并且提供维护这样一个系统的必需工具。它是一个专注于实时处理的任务队列，同时也支持任务调度。本文演示了如何在Django中集成Celery</p>
<a id="more"></a>
<h4 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install celery</span><br><span class="line">pip3 install django-celery</span><br></pre></td></tr></table></figure>
<h4 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">celery                             4.3.0            </span><br><span class="line">django-celery                      3.3.1</span><br></pre></td></tr></table></figure>
<h4 id="celery名词"><a href="#celery名词" class="headerlink" title="celery名词"></a>celery名词</h4><ul>
<li>任务task：就是一个Python函数。</li>
<li>队列queue：将需要执行的任务加入到队列中。</li>
<li>工人worker：在一个新进程中，负责执行队列中的任务。</li>
<li>代理人broker：负责调度，需要提前部署好redis。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>GitHub博客Hexo配合next主题增加搜索引擎验证</title>
    <url>/2019/11/24/GitHub%E5%8D%9A%E5%AE%A2Hexo%E9%85%8D%E5%90%88next%E4%B8%BB%E9%A2%98%E5%A2%9E%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%AA%8C%E8%AF%81/</url>
    <content><![CDATA[<p>GitHub博客Hexo配合next主题增加搜索引擎验证，Github 上利用 hexo 建立的博客是无法被搜索引擎搜索到的。</p>
<a id="more"></a>
<p>Github 本身也不会将信息提交给引擎。所以，为了让博客信息被检索到，我们需要手动将博客网站提交给搜索引擎并验证，实际上就是验证网站是我们自己的</p>
<h3 id="提交Google站点"><a href="#提交Google站点" class="headerlink" title="提交Google站点"></a>提交Google站点</h3><p><a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="noopener">Google</a></p>
<h3 id="选择HTML-meta-标签验证"><a href="#选择HTML-meta-标签验证" class="headerlink" title="选择HTML meta 标签验证"></a>选择HTML meta 标签验证</h3><p>Next 主题下，页面的 header 设置在</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/themes/</span>hexo-theme-<span class="keyword">next</span><span class="regexp">/layout/</span>_partials<span class="regexp">/head/</span>head.swig</span><br></pre></td></tr></table></figure>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> theme.google_site_verification %&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"google-site-verification"</span> <span class="attr">content</span>=<span class="string">"RkRVaaOa4vX520pamxy6ip0HfuaQ-NCyM1SvGbzqUFA"</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>
<p>这里的content从Google控制台获取</p>
<h3 id="提交Baidu站点"><a href="#提交Baidu站点" class="headerlink" title="提交Baidu站点"></a>提交Baidu站点</h3><p><a href="http://www.baidu.com/search/url_submit.htm" target="_blank" rel="noopener">Baidu</a></p>
<h3 id="选择HTML-meta-标签验证-1"><a href="#选择HTML-meta-标签验证-1" class="headerlink" title="选择HTML meta 标签验证"></a>选择HTML meta 标签验证</h3><p>Next 主题下，页面的 header 设置在</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/themes/</span>hexo-theme-<span class="keyword">next</span><span class="regexp">/layout/</span>_partials<span class="regexp">/head/</span>head.swig</span><br></pre></td></tr></table></figure>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> theme.baidu_site_verification %&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"baidu-site-verification"</span> <span class="attr">content</span>=<span class="string">"es0rExrlvZ"</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>
<p>这里的content从Baidu控制台获取</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>baidu</tag>
        <tag>google</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS下Git与GitHub</title>
    <url>/2019/11/24/MacOS%E4%B8%8BGit%E4%B8%8EGitHub/</url>
    <content><![CDATA[<p>还是不知道写啥，本文是有关Mac OS上Git与GitHub相关配置的介绍说明</p>
<a id="more"></a>
<h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><p>该命令也可以升级最新的git</p>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>
<h4 id="查看git指向和版本信息"><a href="#查看git指向和版本信息" class="headerlink" title="查看git指向和版本信息"></a>查看git指向和版本信息</h4><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">which git</span><br><span class="line">/usr/bin/git</span><br><span class="line">git --version</span><br><span class="line">git version 2.21.0 (Apple Git-122.2)</span><br></pre></td></tr></table></figure>
<h4 id="配置github用户名和邮箱"><a href="#配置github用户名和邮箱" class="headerlink" title="配置github用户名和邮箱"></a>配置github用户名和邮箱</h4><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">git config --global user.name "ArithmeticJia"</span><br><span class="line">git config --global user.email "1097197237@qq.com"</span><br></pre></td></tr></table></figure>
<h4 id="生成ssh密钥"><a href="#生成ssh密钥" class="headerlink" title="生成ssh密钥"></a>生成ssh密钥</h4><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "1097197237@qq.com"</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/Users/Arithmetic/.ssh/id_rsa): </span><br><span class="line">/Users/Arithmetic/.ssh/id_rsa already exists.</span><br><span class="line">Overwrite (y/n)? y</span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in /Users/Arithmetic/.ssh/id_rsa.</span><br></pre></td></tr></table></figure>
<h4 id="在GitHub上新增ssh密钥"><a href="#在GitHub上新增ssh密钥" class="headerlink" title="在GitHub上新增ssh密钥"></a>在GitHub上新增ssh密钥</h4><p>复制密钥</p>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">cat .ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>路径一般是</p>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">/User/ArithmeticJia/.ssh</span><br></pre></td></tr></table></figure>
<p>登录GitHub（默认你已经注册了GitHub账号），添加ssh key，点击Settings，如图<br><img src="https://www.guanacossj.com/media/articlebodypics/E901D42E-753A-4E46-BC71-05C54C555B0D.png" alt=""></p>
<h4 id="链接验证"><a href="#链接验证" class="headerlink" title="链接验证"></a>链接验证</h4><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">Hi Arithmeticjia! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>Django个人博客搭建教程---阿里云部署(Ubuntu+Nginx+uwsgi)升级https</title>
    <url>/2019/11/24/Django%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B---%E9%98%BF%E9%87%8C%E4%BA%91%E9%83%A8%E7%BD%B2(Ubuntu+Nginx+uwsgi)%E5%8D%87%E7%BA%A7https/</url>
    <content><![CDATA[<p>更安全的https</p>
<a id="more"></a>
<h4 id="一、阿里云申请SSL证书"><a href="#一、阿里云申请SSL证书" class="headerlink" title="一、阿里云申请SSL证书"></a>一、阿里云申请SSL证书</h4><p>略</p>
<h4 id="二、将pem和key放在nginx目录下"><a href="#二、将pem和key放在nginx目录下" class="headerlink" title="二、将pem和key放在nginx目录下"></a>二、将pem和key放在nginx目录下</h4><p>仅供参考</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/etc/nginx/cert/1831344_www.guanacossj.com.pem;      # 路径/pem文件</span><br><span class="line">/etc/nginx/cert/1831344_www.guanacossj.com.key;      # 路径/key文件</span><br></pre></td></tr></table></figure>
<h4 id="三、修改nginx-conf"><a href="#三、修改nginx-conf" class="headerlink" title="三、修改nginx.conf"></a>三、修改nginx.conf</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  server &#123;</span><br><span class="line">      listen 80;</span><br><span class="line">      server_name  _;</span><br><span class="line">      return 301 https://www.guanacossj.com$request_uri;</span><br><span class="line">   &#125; </span><br><span class="line"> </span><br><span class="line">  server &#123;</span><br><span class="line">      listen       443 default_server;</span><br><span class="line">      listen       [::]:443 default_server;</span><br><span class="line">      server_name  _;</span><br><span class="line">      ssl on;</span><br><span class="line">      ssl_certificate   /etc/nginx/cert/1831344_www.guanacossj.com.pem;     # 路径/pem文件</span><br><span class="line">      ssl_certificate_key  /etc/nginx/cert/1831344_www.guanacossj.com.key;  # 路径/key文件</span><br><span class="line">      ssl_session_timeout 5m;</span><br><span class="line">      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">      ssl_prefer_server_ciphers on;</span><br><span class="line">      charset     utf-8;</span><br><span class="line">      client_max_body_size 1000M;   # adjust to taste</span><br><span class="line">      include /etc/nginx/default.d/*.conf;</span><br><span class="line">      location /static &#123;</span><br><span class="line">      alias /home/MyBlog/static; # ָÏdjangoµÄtaticĿ¼</span><br><span class="line">      &#125;</span><br><span class="line">      location /static/rest_framework/ &#123;</span><br><span class="line">      alias /usr/local/lib/python3.6/dist-packages/rest_framework/static/rest_framework/</span><br><span class="line">    ;&#125;</span><br><span class="line"> </span><br><span class="line">    # Finally, send all non-media requests to the Django server.</span><br><span class="line">    location / &#123;</span><br><span class="line">        uwsgi_pass  127.0.0.1:8000;</span><br><span class="line">        #uwsgi_pass  django;</span><br><span class="line">        include     uwsgi_params; 	# the uwsgi_params file you installed           </span><br><span class="line">        proxy_redirect off;</span><br><span class="line">	      proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection "upgrade";</span><br><span class="line">	      uwsgi_send_timeout 600;</span><br><span class="line">        uwsgi_connect_timeout 600;  </span><br><span class="line">        uwsgi_read_timeout 600; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里把你原来的监听80端口改为监听443端口即可，我之前一直不成功主要是我试图再加一个443端口的监听，应该也可以吧，不管了，反正这样肯定没问题，然后如果还想让http能购访问，就做个重定向。</p>
<h4 id="四、重启nginx"><a href="#四、重启nginx" class="headerlink" title="四、重启nginx"></a>四、重启nginx</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Django</category>
      </categories>
      <tags>
        <tag>django</tag>
        <tag>阿里云</tag>
        <tag>nginx</tag>
        <tag>https</tag>
      </tags>
  </entry>
  <entry>
    <title>Django个人博客搭建教程---REST风格API</title>
    <url>/2019/11/24/Django%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B-REST%E9%A3%8E%E6%A0%BCAPI/</url>
    <content><![CDATA[<p>Django REST Framework 是一个强大且灵活的工具包，用以构建Web API<br>Django REST Framework可以在Django的基础上迅速实现API，并且自身还带有WEB的测试页面，可以方便的测试自己的API</p>
<a id="more"></a>
<h4 id="一、安装依赖"><a href="#一、安装依赖" class="headerlink" title="一、安装依赖"></a>一、安装依赖</h4><p><code>pip3 install djangorestframework</code></p>
<h4 id="二、在settings-py中添加应用"><a href="#二、在settings-py中添加应用" class="headerlink" title="二、在settings.py中添加应用"></a>二、在settings.py中添加应用</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ....</span><br><span class="line"> </span><br><span class="line"><span class="string">'rest_framework'</span>,    <span class="comment"># 加上这句，加在api的前面</span></span><br><span class="line">    ....             <span class="comment"># 后面是你的应用名称</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h4 id="三、路由注册"><a href="#三、路由注册" class="headerlink" title="三、路由注册"></a>三、路由注册</h4><p>子urls.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url,include</span><br><span class="line"><span class="keyword">from</span> JiaBlog <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> routers</span><br><span class="line"> </span><br><span class="line">app_name = <span class="string">'JiaBlog'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 定义路由地址</span></span><br><span class="line">route = routers.DefaultRouter()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 注册新的路由地址</span></span><br><span class="line">route.register(<span class="string">r'getarticleinfo'</span> , views.GetArticleInfo)</span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    ...</span><br><span class="line">    url(<span class="string">'api/'</span>, include(route.urls)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>主urls.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""MyBlog URL Configuration</span></span><br><span class="line"><span class="string">The `urlpatterns` list routes URLs to views. For more information please see:</span></span><br><span class="line"><span class="string">    https://docs.djangoproject.com/en/2.1/topics/http/urls/</span></span><br><span class="line"><span class="string">Examples:</span></span><br><span class="line"><span class="string">Function views</span></span><br><span class="line"><span class="string">    1. Add an import:  from my_app import views</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path('', views.home, name='home')</span></span><br><span class="line"><span class="string">Class-based views</span></span><br><span class="line"><span class="string">    1. Add an import:  from other_app.views import Home</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')</span></span><br><span class="line"><span class="string">Including another URLconf</span></span><br><span class="line"><span class="string">    1. Import the include() function: from django.urls import include, path</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> include</span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> MyBlog.settings <span class="keyword">import</span> MEDIA_ROOT</span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static</span><br><span class="line"><span class="keyword">from</span> JiaBlog <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> haystack.views <span class="keyword">import</span> SearchView</span><br><span class="line"><span class="keyword">from</span> django.views.static <span class="keyword">import</span> serve</span><br><span class="line"><span class="comment">#from django.views import static</span></span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>, views.blog_index),</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">'JiaBlog/'</span>, include(<span class="string">'JiaBlog.urls'</span>, namespace=<span class="string">"JiaBlog"</span>)),</span><br><span class="line">]+static(settings.MEDIA_URL,document_root=settings.MEDIA_ROOT)</span><br></pre></td></tr></table></figure>
<h4 id="四、视图函数"><a href="#四、视图函数" class="headerlink" title="四、视图函数"></a>四、视图函数</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers,viewsets</span><br><span class="line"><span class="keyword">from</span> JiaBlog.models <span class="keyword">import</span> Articles</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticlesSerializers</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Articles                        <span class="comment"># 指定的模型类</span></span><br><span class="line">        fields = (<span class="string">'id'</span>, <span class="string">'title'</span>, <span class="string">'body'</span>, <span class="string">'timestamp'</span>,<span class="string">'authorname'</span>,<span class="string">'views'</span>,<span class="string">'tags'</span>,<span class="string">'category'</span>)  <span class="comment"># 需要序列化的属性</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetArticleInfo</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    queryset = Articles.objects.all().order_by(<span class="string">'-id'</span>)</span><br><span class="line">    serializer_class = ArticlesSerializers</span><br></pre></td></tr></table></figure>
<h4 id="五、数据模型"><a href="#五、数据模型" class="headerlink" title="五、数据模型"></a>五、数据模型</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Articles</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    id = models.AutoField(primary_key=<span class="literal">True</span>)                         <span class="comment"># id</span></span><br><span class="line">    title = models.CharField(max_length = <span class="number">150</span>)                      <span class="comment"># 博客标题</span></span><br><span class="line">    body = models.TextField()                                       <span class="comment"># 博客正文</span></span><br><span class="line">    timestamp = models.DateTimeField()                              <span class="comment"># 创建时间</span></span><br><span class="line">    authorname = models.ForeignKey(<span class="string">'JiaBlog.BlogUser'</span>,on_delete=models.CASCADE)        <span class="comment"># 作者姓名</span></span><br><span class="line">    views = models.PositiveIntegerField(default=<span class="number">0</span>)</span><br><span class="line">    category = models.ForeignKey(Category,on_delete=models.CASCADE,primary_key=<span class="literal">False</span>)</span><br><span class="line">    tags = models.ManyToManyField(Tag, blank=<span class="literal">True</span>,null=<span class="literal">True</span>)</span><br><span class="line">    greats = models.PositiveIntegerField(default=<span class="number">0</span>)</span><br><span class="line">    comments = models.IntegerField(default=<span class="number">0</span>)</span><br><span class="line">    status = models.CharField(max_length=<span class="number">20</span>, default=<span class="string">"DEL"</span>)</span><br><span class="line">    brief = models.CharField(max_length=<span class="number">200</span>,blank=<span class="literal">True</span>,null=<span class="literal">True</span>)</span><br><span class="line">    pic = models.ImageField(upload_to=<span class="string">'jiablogimages'</span>)</span><br><span class="line">    <span class="comment"># bodypic = models.ImageField(upload_to='jiablogimages',blank=True,null=True)</span></span><br><span class="line">    istop = models.CharField(max_length=<span class="number">5</span>,default=<span class="string">''</span>,null=<span class="literal">True</span>,blank=<span class="literal">True</span>)</span><br><span class="line">    articlebodybrief = models.TextField(blank=<span class="literal">True</span>,null=<span class="literal">True</span>)</span><br><span class="line">    last_edit_timestamp = models.DateTimeField(auto_now=<span class="literal">True</span>,verbose_name=<span class="string">"更新时间"</span>,editable=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">GET /JiaBlog/api/getarticleinfo/</span><br><span class="line">HTTP 200 OK</span><br><span class="line">Allow: GET, POST, HEAD, OPTIONS</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Vary: Accept</span><br><span class="line"> </span><br><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line">        "id": 3,</span><br><span class="line">        "title": "python中的GIL锁",</span><br><span class="line">        "body": "为什么我们说python中无法实现真正的多线程呢，这是因为在C语言写的python解释器中存在全局解释器锁，由于全局解释器锁的存在，在同一时间内，python解释器只能运行一个线程的代码，这大大影响了python多线程的性能。而这个解释器锁由于历史原因，现在几乎无法消除。<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>python GIL 之所以会影响多线程等性能，是因为在多线程的情况下，只有当线程获得了一个全局锁的时候，那么该线程的代码才能运行，而全局锁只有一个，所以使用python多线程，在同一时刻也只有一个线程在运行，因此在即使在多核的情况下也只能发挥出单核的性能。<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>任何Python线程执行前，必须先获得GIL锁，然后，每执行100条字节码，解释器就自动释放GIL锁，让别的线程有机会执行。这个GIL全局锁实际上把所有线程的执行代码都给上了锁，所以，多线程在Python中只能交替执行，即使100个线程跑在100核CPU上，也只能用到1个核。<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>对于有io操作的线程，当一个线程在做io操作的时候，因为io操作不需要cpu，所以，这个时候，python会释放python全局锁，这样其他需要运行的线程就会使用该锁。",</span><br><span class="line">        "timestamp": "2019-02-21T22:01:52",</span><br><span class="line">        "authorname": 1,</span><br><span class="line">        "views": 2249,</span><br><span class="line">        "tags": [</span><br><span class="line">            3</span><br><span class="line">        ],</span><br><span class="line">        "category": 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "id": 2,</span><br><span class="line">        "title": "Django和Flask的区别",</span><br><span class="line">        "body": "##写在最前面：<span class="symbol">\r</span><span class="symbol">\n</span>python web开发有很多常用的框架，主要包括Django，Flask，Tornado，Diesel，Cubes，Pulsar，Falcon，webpy，大家最熟知的还是Django和Flask，今天就来简单介绍一下Django和Flask的区别，本博客就是使用Django开发的，Flask不是很了解，因为没有用过，今天就借花献佛，简单介绍一下。<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>##Flask<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>Flask确实很“轻”，不愧是Micro Framework，从Django转向Flask的开发者一定会如此感慨，除非二者均为深入使用过<span class="symbol">\r</span><span class="symbol">\n</span>Flask自由、灵活，可扩展性强，第三方库的选择面广，开发时可以结合自己最喜欢用的轮子，也能结合最流行最强大的Python库<span class="symbol">\r</span><span class="symbol">\n</span>    入门简单，即便没有多少web开发经验，也能很快做出网站<span class="symbol">\r</span><span class="symbol">\n</span>    非常适用于小型网站<span class="symbol">\r</span><span class="symbol">\n</span>    非常适用于开发web服务的API<span class="symbol">\r</span><span class="symbol">\n</span>    开发大型网站无压力，但代码架构需要自己设计，开发成本取决于开发者的能力和经验<span class="symbol">\r</span><span class="symbol">\n</span>    各方面性能均等于或优于Django<span class="symbol">\r</span><span class="symbol">\n</span>    Django自带的或第三方的好评如潮的功能，Flask上总会找到与之类似第三方库<span class="symbol">\r</span><span class="symbol">\n</span>    Flask灵活开发，Python高手基本都会喜欢Flask，但对Django却可能褒贬不一<span class="symbol">\r</span><span class="symbol">\n</span>    Flask与关系型数据库的配合使用不弱于Django，而其与NoSQL数据库的配合远远优于Django<span class="symbol">\r</span><span class="symbol">\n</span>    Flask比Django更加Pythonic，与Python的philosophy更加吻合<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>##Django<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>Django太重了，除了web框架，自带ORM和模板引擎，灵活和自由度不够高<span class="symbol">\r</span><span class="symbol">\n</span>    Django能开发小应用，但总会有“杀鸡焉用牛刀”的感觉<span class="symbol">\r</span><span class="symbol">\n</span>    Django的自带ORM非常优秀，综合评价略高于SQLAlchemy<span class="symbol">\r</span><span class="symbol">\n</span>    Django自带的模板引擎简单好用，但其强大程度和综合评价略低于Jinja<span class="symbol">\r</span><span class="symbol">\n</span>    Django自带ORM也使Django与关系型数据库耦合度过高，如果想使用MongoDB等NoSQL数据，需要选取合适的第三方库，且总感觉Django+SQL才是天生一对的搭配，Django+NoSQL砍掉了Django的半壁江山<span class="symbol">\r</span><span class="symbol">\n</span>    Django目前支持Jinja等非官方模板引擎<span class="symbol">\r</span><span class="symbol">\n</span>    Django自带的数据库管理app好评如潮<span class="symbol">\r</span><span class="symbol">\n</span>    Django非常适合企业级网站的开发：快速、靠谱、稳定<span class="symbol">\r</span><span class="symbol">\n</span>    Django成熟、稳定、完善，但相比于Flask，Django的整体生态相对封闭<span class="symbol">\r</span><span class="symbol">\n</span>    Django是Python web框架的先驱，用户多，第三方库最丰富，最好的Python库，如果不能直接用到Django中，也一定能找到与之对应的移植<span class="symbol">\r</span><span class="symbol">\n</span>    Django上手也比较容易，开发文档详细、完善，相关资料丰富",</span><br><span class="line">        "timestamp": "2019-02-21T21:25:28",</span><br><span class="line">        "authorname": 1,</span><br><span class="line">        "views": 2599,</span><br><span class="line">        "tags": [</span><br><span class="line">            1,</span><br><span class="line">            2</span><br><span class="line">        ],</span><br><span class="line">        "category": 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "id": 1,</span><br><span class="line">        "title": "用Django写一个自己的博客网站",</span><br><span class="line">        "body": "##写在最前面：<span class="symbol">\r</span><span class="symbol">\n</span>想用Django写网站很久了，本地也建立过很多demo，对于整个框架的入门算是熟练了。用pycharm可 <span class="symbol">\r</span><span class="symbol">\n</span>以很方便的新建一个Django工程。专业版的Pycharm是自带Django的，目前Diango的最新版本应该是2.1。<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>IDE:Pycharm<span class="symbol">\r</span><span class="symbol">\n</span>python版本：3.6<span class="symbol">\r</span><span class="symbol">\n</span>操作系统：macOS Mojave<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>![图片](/media/images/blog1body1.png)<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>这是用Django2.1写的一个个人博客的展示，还有一个含有带登录、注册、登出的session控制的监控系统，博客本身内置下载、天气查询、Google在线翻译，还可以发送QQ邮件。<span class="symbol">\r</span><span class="symbol">\n</span>下面先贴一下目录结构：<span class="symbol">\r</span><span class="symbol">\n</span><span class="symbol">\r</span><span class="symbol">\n</span>![图片](/static/images/blog1body2.jpg)",</span><br><span class="line">        "timestamp": "2019-02-21T21:20:23",</span><br><span class="line">        "authorname": 1,</span><br><span class="line">        "views": 2657,</span><br><span class="line">        "tags": [</span><br><span class="line">            1</span><br><span class="line">        ],</span><br><span class="line">        "category": 1</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Django</category>
      </categories>
      <tags>
        <tag>django</tag>
        <tag>restframework</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js入门（四）---用Pycharm创建你的第一个完整的HelloVue</title>
    <url>/2019/11/23/Vue-js%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89-%E7%94%A8Pycharm%E5%88%9B%E5%BB%BA%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84HelloVue/</url>
    <content><![CDATA[<p>本文主要介绍了如何在Pycharm中构建一个简单的vue应用,摘要要写50个字，不然markdown格式会很丑，我也不知道要写啥，感觉没啥好写的，现在应该差不多了</p>
<a id="more"></a>
<h2 id="一、在Pycharm中下载Vue-js插件"><a href="#一、在Pycharm中下载Vue-js插件" class="headerlink" title="一、在Pycharm中下载Vue.js插件"></a>一、在Pycharm中下载Vue.js插件</h2><p><img src="https://www.guanacossj.com/media/articlebodypics/1571819210811.jpg" alt=""></p>
<h2 id="二、新建一个Vue-js项目"><a href="#二、新建一个Vue-js项目" class="headerlink" title="二、新建一个Vue.js项目"></a>二、新建一个Vue.js项目</h2><p><img src="https://www.guanacossj.com/media/articlebodypics/1571819312914.jpg" alt=""><br>然后等待安装启动完成，这里提示我要不要用淘宝源，我果断同意啊</p>
<h2 id="三、项目启动"><a href="#三、项目启动" class="headerlink" title="三、项目启动"></a>三、项目启动</h2><p><img src="https://www.guanacossj.com/media/articlebodypics/1571819476507.jpg" alt=""></p>
<h2 id="四、项目目录结构"><a href="#四、项目目录结构" class="headerlink" title="四、项目目录结构"></a>四、项目目录结构</h2><p><img src="https://www.guanacossj.com/media/articlebodypics/1571819572736.jpg" alt=""></p>
<figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">'''</span><br><span class="line">-<span class="ruby">node_modules：项目的依赖</span></span><br><span class="line"><span class="ruby">-public</span></span><br><span class="line"><span class="ruby">    -favicon.ico  网页的图标</span></span><br><span class="line"><span class="ruby">    -index.html   主页面</span></span><br><span class="line"><span class="ruby">-src：我们需要关注的</span></span><br><span class="line"><span class="ruby">    -assets：方静态文件</span></span><br><span class="line"><span class="ruby">    -components：小组件</span></span><br><span class="line"><span class="ruby">    -views  ：页面组件</span></span><br><span class="line"><span class="ruby">    -App.vue ：主组件</span></span><br><span class="line"><span class="ruby">    -main.js ：项目主入口js</span></span><br><span class="line"><span class="ruby">    -router.js： 路由相关，以后配置路由，都在这里配置</span></span><br><span class="line"><span class="ruby">    -store.js  ：vuex相关，状态管理器</span></span><br><span class="line"><span class="ruby">-package.json   项目的依赖文件</span></span><br><span class="line"><span class="ruby"><span class="string">''</span><span class="string">'</span></span></span><br></pre></td></tr></table></figure>
<h2 id="五、修改默认的启动页"><a href="#五、修改默认的启动页" class="headerlink" title="五、修改默认的启动页"></a>五、修改默认的启动页</h2><p>在components下新建一个HelloVue</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">"HelloVue"</span>,</span></span><br><span class="line">        data () &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">            msg: <span class="string">'HelloVue'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>修改App.vue</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'./components/HelloVue.vue'</span></span><br></pre></td></tr></table></figure>
<p>效果图<br><img src="https://www.guanacossj.com/media/articlebodypics/1571819861870.jpg" alt=""></p>
]]></content>
  </entry>
  <entry>
    <title>腾讯云Ubuntu下Collectd+Grafana+Influxdb的搭建教程</title>
    <url>/2019/11/23/%E8%85%BE%E8%AE%AF%E4%BA%91Ubuntu%E4%B8%8BCollectd-Grafana-Influxdb%E7%9A%84%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>本文介绍了腾讯云服务器Ubuntu下监控平台的搭建教程，主要组件分为三个部分，grafana、collectd、influxdb。grafana主要用来作为监控的前端展示，collectd负责采集服务器性能指标，influxdb则是一款开源的时序数据库，负责采集数据的存储</p>
<a id="more"></a>
<h2 id="一、安装Collectd"><a href="#一、安装Collectd" class="headerlink" title="一、安装Collectd"></a>一、安装Collectd</h2><h3 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h3><p><code>sudo apt install collectd collectd-utils</code></p>
<h3 id="2、修改collectd-conf"><a href="#2、修改collectd-conf" class="headerlink" title="2、修改collectd.conf"></a>2、修改collectd.conf</h3><p>开启常用插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">LoadPlugin cpu</span><br><span class="line">LoadPlugin df</span><br><span class="line">LoadPlugin disk</span><br><span class="line">LoadPlugin interface</span><br><span class="line">LoadPlugin irq</span><br><span class="line">LoadPlugin load</span><br><span class="line">LoadPlugin memory</span><br><span class="line">LoadPlugin mysql</span><br><span class="line">LoadPlugin network</span><br><span class="line">LoadPlugin processes</span><br><span class="line">LoadPlugin rrdtool</span><br><span class="line"> </span><br><span class="line">&lt;Plugin cpu&gt;</span><br><span class="line">	ReportByCpu true</span><br><span class="line">	ReportByState true</span><br><span class="line">	ValuesPercentage false</span><br><span class="line">&lt;/Plugin&gt;</span><br><span class="line"> </span><br><span class="line">&lt;Plugin interface&gt;</span><br><span class="line">	Interface "eth0"</span><br><span class="line">	IgnoreSelected false</span><br><span class="line"><span class="meta">#</span><span class="bash">	ReportInactive <span class="literal">true</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">	UniqueName <span class="literal">false</span></span></span><br><span class="line">&lt;/Plugin&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&lt;Plugin network&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash">	<span class="comment"># client setup:</span></span></span><br><span class="line">Server "127.0.0.1" "25826"</span><br><span class="line"><span class="meta">#</span><span class="bash">	&lt;Server <span class="string">"239.192.74.66"</span> <span class="string">"25826"</span>&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">		SecurityLevel Encrypt</span></span><br><span class="line"><span class="meta">#</span><span class="bash">		Username <span class="string">"user"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">		Password <span class="string">"secret"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">		Interface <span class="string">"eth0"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">		ResolveInterval 14400</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	&lt;/Server&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	TimeToLive 128</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	<span class="comment"># server setup:</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">	Listen <span class="string">"ff18::efc0:4a42"</span> <span class="string">"25826"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">	&lt;Listen <span class="string">"239.192.74.66"</span> <span class="string">"25826"</span>&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">		SecurityLevel Sign</span></span><br><span class="line"><span class="meta">#</span><span class="bash">		AuthFile <span class="string">"/etc/collectd/passwd"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">		Interface <span class="string">"eth0"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">	&lt;/Listen&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	MaxPacketSize 1452</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	<span class="comment"># proxy setup (client and server as above):</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">	Forward <span class="literal">true</span></span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	<span class="comment"># statistics about the network plugin itself</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">	ReportStats <span class="literal">false</span></span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	<span class="comment"># "garbage collection"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">	CacheFlush 1800</span></span><br><span class="line">&lt;/Plugin&gt;</span><br></pre></td></tr></table></figure>
<h3 id="3、常用命令"><a href="#3、常用命令" class="headerlink" title="3、常用命令"></a>3、常用命令</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">sudo <span class="meta-keyword">/etc/</span>init.d/collectd start</span><br><span class="line">sudo <span class="meta-keyword">/etc/</span>init.d/collectd restart</span><br></pre></td></tr></table></figure>
<p>##二、 安装Influxdb<br>###1、安装</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> influxdb</span><br><span class="line">sudo apt <span class="keyword">install</span> influxdb-<span class="keyword">client</span></span><br></pre></td></tr></table></figure>
<p>###2、修改influxdb.conf</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment">### [collectd]</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment">### Controls one or many listeners for collectd data.</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"> </span><br><span class="line">  [[collectd]]</span><br><span class="line">  <span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line">  <span class="attr">bind-address</span> = <span class="string">"127.0.0.1:25826"</span></span><br><span class="line">  <span class="attr">database</span> = <span class="string">"collectdb"</span></span><br><span class="line">  <span class="comment"># retention-policy = ""</span></span><br><span class="line">  <span class="attr">typesdb</span> = <span class="string">"/usr/share/collectd/types.db"</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment"># These next lines control how batching works. You should have this enabled</span></span><br><span class="line">  <span class="comment"># otherwise you could get dropped metrics or poor performance. Batching</span></span><br><span class="line">  <span class="comment"># will buffer points in memory if you have many coming in.</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Flush if this many points get buffered</span></span><br><span class="line">  <span class="attr">batch-size</span> = <span class="number">5000</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Number of batches that may be pending in memory</span></span><br><span class="line">  <span class="comment"># batch-pending = 10</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment"># Flush at least this often even if we haven't hit buffer limit</span></span><br><span class="line">  <span class="attr">batch-timeout</span> = <span class="string">"10s"</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment"># UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.</span></span><br><span class="line">  <span class="attr">read-buffer</span> = <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>###3、常用命令</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>influxdb status</span><br><span class="line"> </span><br><span class="line">sudo<span class="built_in"> service </span>influxdb start</span><br></pre></td></tr></table></figure>
<p>###4、新建数据库</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> collectdb</span><br></pre></td></tr></table></figure>
<p>###5、查看端口是否监听成功</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">netstat -anp<span class="string">| grep 25826</span></span><br></pre></td></tr></table></figure>
<p>###6、查看数据</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">root@VM<span class="number">-0</span><span class="number">-16</span>-ubuntu:~# influx</span><br><span class="line">Visit https://enterprise.influxdata.com <span class="keyword">to</span> register <span class="keyword">for</span> updates, InfluxDB <span class="keyword">server</span> management, <span class="keyword">and</span> monitoring.</span><br><span class="line">Connected <span class="keyword">to</span> http://localhost:<span class="number">8086</span> <span class="keyword">version</span> <span class="number">1.1</span><span class="number">.1</span></span><br><span class="line">InfluxDB shell <span class="keyword">version</span>: <span class="number">1.1</span><span class="number">.1</span></span><br><span class="line">&gt; use collectdb</span><br><span class="line"><span class="keyword">Using</span> <span class="keyword">database</span> collectdb</span><br><span class="line">&gt; <span class="keyword">show</span> field keys;</span><br><span class="line"><span class="type">name</span>: cpu_value</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: df_value</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: disk_io_time</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: disk_read</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: disk_value</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: disk_weighted_io_time</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: disk_write</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: entropy_value</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: interface_rx</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: interface_tx</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: irq_value</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: load_longterm</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: load_midterm</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: load_shortterm</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: memory_value</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: processes_value</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: swap_value</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line"><span class="type">name</span>: users_value</span><br><span class="line">fieldKey	fieldType</span><br><span class="line"><span class="comment">--------	---------</span></span><br><span class="line"><span class="keyword">value</span>		<span class="type">float</span></span><br><span class="line"> </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
<h3 id="7、通过sql显示15条cpu-value的信息"><a href="#7、通过sql显示15条cpu-value的信息" class="headerlink" title="7、通过sql显示15条cpu_value的信息"></a>7、通过sql显示15条cpu_value的信息</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&gt; select * <span class="keyword">from</span> cpu_value limit 15;</span><br><span class="line">name: cpu_value</span><br><span class="line">time			host		<span class="built_in">	instance	type	</span>type_instance	value</span><br><span class="line">----			----			--------	----	-------------	-----</span><br><span class="line">1573975276185910000	localhost.localdomain	0		cpu<span class="built_in">	user	</span>3429</span><br><span class="line">1573975276185917000	localhost.localdomain	0		cpu<span class="built_in">	system	</span>2646</span><br><span class="line">1573975276185920000	localhost.localdomain	0		cpu	wait	4424</span><br><span class="line">1573975276185936000	localhost.localdomain	0		cpu	nice	149</span><br><span class="line">1573975276185939000	localhost.localdomain	0		cpu	interrupt	0</span><br><span class="line">1573975276185942000	localhost.localdomain	0		cpu	softirq17</span><br><span class="line">1573975276185945000	localhost.localdomain	0		cpu	steal	0</span><br><span class="line">1573975276185947000	localhost.localdomain	0		cpu	idle	122528</span><br><span class="line">1573975286185912000	localhost.localdomain	0		cpu<span class="built_in">	user	</span>3443</span><br><span class="line">1573975286185919000	localhost.localdomain	0		cpu<span class="built_in">	system	</span>2658</span><br><span class="line">1573975286185923000	localhost.localdomain	0		cpu	wait	4428</span><br><span class="line">1573975286185927000	localhost.localdomain	0		cpu	nice	149</span><br><span class="line">1573975286185931000	localhost.localdomain	0		cpu	interrupt	0</span><br><span class="line">1573975286185935000	localhost.localdomain	0		cpu	softirq17</span><br><span class="line">1573975286185937000	localhost.localdomain	0		cpu	steal	0</span><br><span class="line"> </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
<p>##三、安装Grafana<br>###1、安装grafana</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//<span class="keyword">dl</span>.grafana.<span class="keyword">com</span>/oss/release/grafana_6.<span class="number">4.4</span>_amd64.<span class="keyword">deb</span></span><br><span class="line">sudo dpkg -i grafana_6.<span class="number">4.4</span>_amd64.<span class="keyword">deb</span></span><br></pre></td></tr></table></figure>
<p>###2、启动</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>grafana-server start</span><br></pre></td></tr></table></figure>
<p>###3、配置grafana<br><code>访问http://127.0.0.1:3000，如果是腾讯云就是你的ip:3000</code></p>
]]></content>
      <categories>
        <category>Collectd</category>
      </categories>
      <tags>
        <tag>grafana</tag>
        <tag>collectd</tag>
        <tag>influxdb</tag>
      </tags>
  </entry>
  <entry>
    <title>Welcome to my new blog</title>
    <url>/2019/11/23/Welcome-to-my-new-blog/</url>
    <content><![CDATA[<p>欢迎来到我的博客，更多精彩请点进来</p>
<a id="more"></a>
<h3 id="我的主页"><a href="#我的主页" class="headerlink" title="我的主页"></a>我的主页</h3><p><a href="https://www.guanacossj.com" target="_blank" rel="noopener" title="https://www.guanacossj.com">https://www.guanacossj.com</a></p>
<h3 id="Github-Page"><a href="#Github-Page" class="headerlink" title="Github Page"></a>Github Page</h3><p><a href="https://www.guanacossj.com" target="_blank" rel="noopener" title="https://arithmeticjia.github.io/">https://arithmeticjia.github.io/</a></p>
]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/11/23/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
